openapi: 3.0.0
paths: {}
info:
  title: Common components
  version: 1.0.0
components:
  
  parameters:
  # IN PATH 
    version:
      name: version
      description: The version of the API of which you want to get the configuration.
      in: path
      required: true
      schema:
        type: string
    bookingHash:
      name: booking_hash
      description: Booking hash
      required: true
      in: path
      schema:
        type: string
    shoppingCartHash:
      name: shopping_cart_hash
      description: The hash of the shopping cart.
      required: true
      in: path
      schema:
        type: string
    tourId:
      name: tour_id
      description: The tour id
      required: true
      in: path
      schema:
        type: integer
    supplierId:
      name: supplier_id
      description: The supplier id
      required: true
      in: path
      schema:
        type: integer
  
  # IN QUERY
    cntLanguage:
      name: cnt_language
      description: ISO 639, Language of the text content.
      in: query
      required: true
      schema:
        type: string
        enum:
          - da
          - de
          - en
          - es
          - fr
          - it
          - nl
          - no
          - pl
          - pt
          - fi
          - sv
          - tr
          - zh
    currency:
      name: currency
      description: ISO 4217, The currency with which you would like to pay.
      in: query
      required: true
      schema:
        type: string
        enum:
          - USD
          - EUR
          - AUD
          - GBP
          - CAD
          - DKK
          - NZD
          - NOK
          - PLN
          - SGD
          - SEK
          - CHF
          - AED
    country:
      name: country
      description: ISO 3166-1, The country where to payment originates. Should be the same value as the country_code field of the Billing Address Object.
      in: query
      required: true
      schema:
        type: string
    externalReferenceId:
      name: external_reference_id
      description: The external reference ID. The reseller can supply a reference number under which this booking is referenced in his system. This field contains that number. Maximum length is 255.
      required: false
      in: query
      schema:
        type: string
    preformatted:
      name: preformatted
      description: The amount of content to deliver with the search results.
      required: false
      in: query
      schema:
        type: string
      examples:
        home:
          summary: Include a composition of information
          value: home
        teaser:
          summary: Include title and an abstract
          value: teaser
        full:
          summary: Include a full description
          value: full
    
    # SEARCH PARAMETERS
    q:
      name: q
      description: "Mutually exclusive with 'coordinates' parameter! Query string, can be location name or IATA code. For IATA the query parameter looks like this: 'q=iata:jfk'"
      required: false
      in: query
      schema:
        type: string
    coordinates[]:
      name: coordinates[]
      description: Mutually exclusive with 'q' parameter! Latitude, longitude and radius as array. Latitude must be between -90 and 90, longitude must be between -180 and 180, radius must be between 0 and 150 (considered km). 'i.e. &coordinates[]=52.5200&coordinates[]=13.4050&coordinates[]=10'
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        allCoordinates:
          summary: Latitude, longitude, radius
          value: [52.5200, 13.4050, 10]
    date[]:
      name: date[]
      description: Check for tours that are offered on date or between dates. The date and time in the format is. 'Y-m-d T H:i:s' The first date passed is the beginning of the time range, the second is the ending of the time range. 'i.e. &date[]=2017-10-01T00:00:00&date[]=2017-10-01T23:59:59'
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
      style: matrix
      explode: true
      allowReserved: true
      examples:
        multipleIds:
          summary: Begin, End
          value: ['2021-05-01T00:00:00', '2021-05-01T23:59:59']
    condLanguage[]:
      name: cond_language[]
      description: The conduction language(s) of a tour. When given, the results contain only tours that are available in the specified language(s).
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a single language
          value: [en]
        multipleIds:
          summary: Example of a multiple languages
          value: [de, en]
    price[]:
      name: price[]
      description: Filter for price in the query. A single value indicates the maximum price. Otherwise, it's interpreted as [min, max].
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a max price
          value: [200]
        multipleIds:
          summary: Example of a min / max
          value: [100, 200]
    categories[]:
      name: categories[]
      description: Filter for categories for a given query via 'q' or 'coordinates', also works stand-alone as the main query parameter.
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a single category
          value: [55]
        multipleIds:
          summary: Example of multiple categories
          value: [55, 56]
    rating[]:
      name: rating[]
      description: Filter for Tours with the given ratings.
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a single rating
          value: [4]
        multipleIds:
          summary: Example of multiple ratings
          value: [5, 4]
    duration[]:
      name: duration[]
      description: Filter for min and/or max duration in minutes. Single Value max. duration. Otherwise [min, max].
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a max duration
          value: [3]
        multipleIds:
          summary: Example of a min / max
          value: [1, 3]
    flags[]:
      name: flags[]
      description: Various flags about properties of the tour (multiple selection allowed).
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
          enum: [private, wheelchair, skip-line, pick-up, special, free-sale-only, mobile-voucher-only]
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a private tour
          value: [private]

    categoryId:
      name: category_id
      description: The id of the category
      required: true
      in: path
      schema:
        type: integer
    optionId:
      name: option_id
      description: The ID of the option.
      required: true
      in: path
      schema:
        type: integer
  
    # SORTING AND PAGINATION
    sortfield:
      name: sortfield
      in: query
      required: false
      description: Defines the sort field.
      schema:
        type: string
        enum: [popularity, price, rating, duration]
    sortdirection:
      name: sortdirection
      in: query
      required: false
      description: Defines the sort order.
      schema:
        type: string
        enum: [DESC, ASC]
    limit:
      name: Limit
      in: query
      required: false
      description: Number of items to retrieve.
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 10
    offset:
      name: offset
      in: query
      required: false
      description: Offset the list of returned results by this amount.
      schema:
        type: integer
        default: 0
    status:
      name: Status
      in: query
      required: false
      description: Filter bookings based on status.
      schema:
        type: string
        enum:
          - unconfirmed
          - confirmed
          - canceled



 # TODO MOVE SCHEMAS TO SEPERATE FILE
  schemas:
    ShoppingCartId:
      description: The ID of the shopping cart.
      type: number
      example: 32724458
    ShoppingCartHash:
      description: The hash of the shopping cart.
      type: string
      example: '0ESFMXPUANBNSGAOSLR4JWCOD7S4P18K'
    BookingId:
      description: The id of the booking.
      type: number
      example: 13822240
    BookingHash:
      description: The hash of the booking. This identifies the booking.
      type: string
      example: 'WTLDAJ2S335O539FV3YCGZ0JMOCSTB5M'
    BookingStatus:
      description: The status of the booking.
      type: string
      enum: [temp, unconfirmed, confirmed, deleted, canceled, deleted_by_customer, deleted_by_daemon]
      example: 'temp'
    CategoryId:
      description: ID of the category.
      type: integer
      example: 33
    ReturnCode:
      description: The return code of the booking service.
      type: number
      example: 0
    TourId:
      description: The ID of the tour.
      type: number
      example: 50872
    OptionId:
      description: The ID of the tour option.
      type: number
      example: 69232
    Datetime:
      type: string
      format: datetime
      example: "2017-09-01T00:00:00"
    DatetimeUTC:
      description: The datetime in UTC of when the activity dates place.
      type: string
      format: datetime
      example: "2017-09-01T04:00:00Z"
    DatetimeType:
      description: Is the datetime a date or a datetime. This is needed as some activities only have a day on which they take place.
      type: string
      enum: [date, datetime]
      example: 'date'      
    CancellationPolicyText:
      description: Cancellation policy
      type: string
      example: Your activity is non-refundable,
    CurrentlyCancellableAtNoFee:
      description: Indicates whether this booking is currently cancellable at no fee.
      type: boolean
      example: true
