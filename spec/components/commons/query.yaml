openapi: 3.0.2
paths: {}
info:
  title: Common components
  version: 1.0.0
components:
  parameters:
    cntLanguage:
      name: cnt_language
      description: ISO 639, Language of the text content.
      in: query
      required: true
      schema:
        $ref: "./fields.yaml#/components/schemas/CntLanguage"
    currency:
      name: currency
      description: ISO 4217, The currency with which you would like to pay.
      in: query
      required: true
      schema:
        $ref: "./fields.yaml#/components/schemas/Currency"
    country:
      name: country
      description: ISO 3166-1, The country where to payment originates. Should be the same value as the country_code field of the Billing Address Object.
      in: query
      required: true
      schema:
        type: string
    preformatted:
      name: preformatted
      description: The amount of content to deliver with the search results.
      required: false
      in: query
      schema:
        type: string
      examples:
        home:
          summary: Include a composition of information
          value: home
        teaser:
          summary: Include title and an abstract
          value: teaser
        full:
          summary: Include a full description
          value: full

    # SEARCH PARAMETERS
    q:
      name: q
      description: "Mutually exclusive with 'coordinates' parameter! Query string, can be location name or IATA code. For IATA the query parameter looks like this: 'q=iata:jfk'"
      required: false
      in: query
      schema:
        type: string
      examples:
        search_by_query:
          summary: Search by standard query.
          value: Berlin
        search_by_IATA:
          summary: Search by IATA airport codes.
          value: q=iata:jfk

    coordinates[]:
      name: coordinates[]
      description: Mutually exclusive with 'q' parameter! Search by latitude, longitude and radius passed as URL array.'
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        allCoordinates:
          summary: Latitude, longitude, radius
          value: [52.5200, 13.4050, 10]
    date[]:
      name: date[]
      description: Check for tours that are offered on date or between dates.
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
          schema: $ref './fields.yaml#/components/schemas/Datetime'
      style: matrix
      explode: true
      allowReserved: true
      examples:
        multipleIds:
          summary: Date from, Date to
          value: ["2021-05-01T00:00:00", "2021-05-01T23:59:59"]
    condLanguage[]:
      name: cond_language[]
      description: The conduction language(s) of a tour. When given, the results contain only tours that are available in the specified language(s).
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a single language
          value: [en]
        multipleIds:
          summary: Example of a multiple languages
          value: [de, en]
    price[]:
      name: price[]
      description: Filter for price in the query.
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a max price
          value: [200]
        multipleIds:
          summary: Example of a min / max
          value: [100, 200]
    categories[]:
      name: categories[]
      description: Filter for categories for a given query via 'q' or 'coordinates', also works stand-alone as the main query parameter.
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a single category
          value: [55]
        multipleIds:
          summary: Example of multiple categories
          value: [55, 56]
    rating[]:
      name: rating[]
      description: Filter for Tours with the given ratings.
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a single rating
          value: [4]
        multipleIds:
          summary: Example of multiple ratings
          value: [5, 4]
    duration[]:
      name: duration[]
      description: Filter for min and/or max duration in minutes. Single Value max. duration. Otherwise [min, max].
      required: false
      in: query
      schema:
        type: array
        items:
          type: number
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a max duration
          value: [3]
        multipleIds:
          summary: Example of a min / max
          value: [1, 3]
    flags[]:
      name: flags[]
      description: Various flags about properties of the tour (multiple selection allowed).
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
          enum:
            [
              private,
              wheelchair,
              skip-line,
              pick-up,
              special,
              free-sale-only,
              mobile-voucher-only,
            ]
      style: matrix
      explode: true
      allowReserved: true
      examples:
        oneId:
          summary: Example of a private tour
          value: [private]

    categoryId:
      name: category_id
      description: The id of the category
      required: true
      in: path
      schema:
        type: integer
    optionId:
      name: option_id
      description: The ID of the option.
      required: true
      in: path
      schema:
        type: integer

    # SORTING AND PAGINATION
    sortfield:
      name: sortfield
      in: query
      required: false
      description: Defines the sort field.
      schema:
        type: string
        enum: [popularity, price, rating, duration]
    sortdirection:
      name: sortdirection
      in: query
      required: false
      description: Defines the sort order.
      schema:
        type: string
        enum: [DESC, ASC]
    limit:
      name: Limit
      in: query
      required: false
      description: Number of items to retrieve.
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 10
    offset:
      name: offset
      in: query
      required: false
      description: Offset the list of returned results by this amount.
      schema:
        type: integer
        default: 0
    status:
      name: Status
      in: query
      required: false
      description: Filter bookings based on status.
      schema:
        type: string
        enum:
          - unconfirmed
          - confirmed
          - canceled
