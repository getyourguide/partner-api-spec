openapi: 3.0.2
info:
  title: Common query parameters
  version: 1.0.0
paths: {}
components:
  parameters:
    categories[]:
      allowReserved: true
      description: Filter for categories for a given query via 'q' or 'coordinates', also works stand-alone as the main query parameter.
      examples:
        multipleIds:
          summary: Example of multiple categories
          value:
            - 55
            - 56
        oneId:
          summary: Example of a single category
          value:
            - 55
      explode: true
      in: query
      name: categories[]
      required: false
      schema:
        items:
          $ref: "fields.yaml#/components/schemas/CategoryId"
        type: array
      style: matrix
    categoryId:
      in: query
      name: category_id
      required: false
      schema:
        $ref: "fields.yaml#/components/schemas/CategoryId"
    cntLanguage:
      in: query
      name: cnt_language
      required: true
      schema:
        $ref: "fields.yaml#/components/schemas/CntLanguage"
    condLanguage[]:
      allowReserved: true
      description: The conduction language(s) of a tour. When given, the results contain only tours that are available in the specified language(s).
      examples:
        multipleIds:
          summary: Example of a multiple languages
          value:
            - de
            - en
        oneId:
          summary: Example of a single language
          value:
            - en
      explode: true
      in: query
      name: cond_language[]
      required: false
      schema:
        items:
          $ref: fields.yaml#/components/schemas/Language
        type: array
      style: matrix
    coordinates[]:
      allowReserved: true
      description: Mutually exclusive with 'q' parameter! Search by latitude, longitude and radius passed as URL array.'
      examples:
        allCoordinates:
          summary: Latitude, longitude, radius
          value:
            - 48.85693
            - 2.3412
            - 10
      explode: true
      in: query
      name: coordinates[]
      required: false
      schema:
        items:
          type: number
        type: array
      style: matrix
    country:
      description: ISO 3166-1, The country where to payment originates. Should be the same value as the country_code field of the Billing Address Object.
      in: query
      name: country
      example: US
      required: true
      schema:
        $ref: "fields.yaml#/components/schemas/Country"
    currency:
      description: ISO 4217, The currency with which you would like to pay.
      in: query
      name: currency
      example: USD
      required: true
      schema:
        $ref: fields.yaml#/components/schemas/Currency
    date[]:
      allowReserved: true
      description: Check for tours that are offered on date or between dates.
      examples:
        multipleDates:
          summary: Date from, Date to
          value:
            - "2021-05-01T00:00:00"
            - "2021-05-01T23:59:59"
        singleDate:
          summary: Date from
          value:
            - "2021-05-01T00:00:00"
      explode: true
      in: query
      name: date[]
      required: false
      schema:
        items:
          schema: $ref 'fields.yaml#/components/schemas/Datetime'
        type: array
      style: matrix
    duration[]:
      allowReserved: true
      description: Filter for min and/or max duration in minutes. Single Value max. duration. Otherwise [min, max].
      examples:
        multipleIds:
          summary: Example of a min / max
          value:
            - 1
            - 3
        oneId:
          summary: Example of a max duration
          value:
            - 3
      explode: true
      in: query
      name: duration[]
      required: false
      schema:
        items:
          type: number
        type: array
      style: matrix
    flags[]:
      allowReserved: true
      description: Various flags about properties of the tour (multiple selection allowed).
      examples:
        oneFlag:
          summary: Filter for private tours only.
          value:
            - private
        multipleFlags:
          summary: Filter for private tours with pick-up only.
          value:
            - private
            - pick-up
      explode: true
      in: query
      name: flags[]
      required: false
      schema:
        items:
          $ref: fields.yaml#/components/schemas/Flags
        type: array
      style: matrix
    limit:
      in: query
      name: limit
      required: false
      schema:
        $ref: fields.yaml#/components/schemas/Limit
    offset:
      in: query
      name: offset
      required: false
      schema:
        $ref: fields.yaml#/components/schemas/Offset
    preformatted:
      description: The amount of content to deliver with the search results.
      examples:
        full:
          summary: Include a full description
          value: full
        home:
          summary: Include a composition of information
          value: home
        teaser:
          summary: Include title and an abstract
          value: teaser
      in: query
      name: preformatted
      required: false
      schema:
        type: string
    price[]:
      allowReserved: true
      description: Filter for price in the query.
      examples:
        multipleIds:
          summary: Example of a min / max
          value:
            - 100
            - 200
        oneId:
          summary: Example of a max price
          value:
            - 200
      explode: true
      in: query
      name: price[]
      required: false
      schema:
        items:
          $ref: fields.yaml#/components/schemas/Price
        type: array
      style: matrix
    q:
      description: "Mutually exclusive with 'coordinates' parameter! Query string, can be location name or IATA code. For IATA the query parameter looks like this: 'q=iata:jfk'"
      examples:
        search_by_IATA:
          summary: Search by IATA airport codes.
          value: iata:jfk
        search_by_query:
          summary: Search by standard query.
          value: Berlin
      in: query
      name: q
      required: false
      schema:
        type: string
    rating[]:
      allowReserved: true
      description: Filter for Tours with the given ratings. Single value min rating. Otherwise [min, max].
      examples:
        multipleRating:
          summary: Example of min/max rating.
          value:
            - 2
            - 5
        singleRating:
          summary: Example of a min rating.
          value:
            - 4
      explode: true
      in: query
      name: rating[]
      required: false
      schema:
        items:
          $ref: fields.yaml#/components/schemas/Rating
        type: array
      style: matrix
    sortdirection:
      description: Defines the sort order.
      in: query
      name: sortdirection
      required: false
      schema:
        enum:
          - DESC
          - ASC
        type: string
    sortfield:
      description: Defines the sort field.
      in: query
      name: sortfield
      required: false
      schema:
        enum:
          - popularity
          - price
          - rating
          - duration
        type: string
    status:
      description: Filter (formerly) confirmed bookings based on status.
      in: query
      name: Status
      required: false
      schema:
        enum:
          - unconfirmed
          - confirmed
          - canceled
        type: string
